<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.alecgorge.minecraft.jsonapi</groupId>
    <artifactId>spigot</artifactId>
    <packaging>pom</packaging>
    <version>5.10.0-mc1.15.2-R0.1-SNAPSHOT</version>
    <name>spigot</name>
    <url>http://github.com/alecgorge/jsonapi</url>

    <parent>
        <groupId>com.alecgorge.minecraft</groupId>
        <artifactId>jsonapi-parent</artifactId>
        <version>5.10.0-mc1.15.2-R0.1-SNAPSHOT</version>
    </parent>

    <organization>
        <name>Alec Gorge</name>
        <url>http://alecgorge.com</url>
    </organization>

    <scm>
        <developerConnection>scm:git:git@github.com:alecgorge/jsonapi.git</developerConnection>
        <connection>scm:git:git://github.com/alecgorge/jsonapi.git</connection>
        <url>https://github.com/alecgorge/jsonapi/tree/master/</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <groovy.version>3.0.4</groovy.version>
        <spigotJar>${settings.localRepository}/org/spigotmc/spigot/${spigotVersion}/spigot-${spigotVersion}.jar</spigotJar>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>3.0.0-beta-3</version>
            <type>pom</type>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar</url>
                            <outputFileName>BuildTools.jar</outputFileName>
                            <outputDirectory>${spigotBuildDir}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <id>build-spigotjar-only-if-not-found</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <buildDir>${project.build.directory}</buildDir>
                                <spigotJarPath>${spigotJar}</spigotJarPath>
                            </properties>
                            <source>
                                println '----------------------| Executing spigot BuildTools from Maven |---------------------------'
                                def buildToolsCmd = 'java -jar BuildTools.jar'
                                def sysenv = System.getenv().collect { k, v -> "$k=$v" }
                                def cwd = new File(properties['buildDir'])
                                def spigotJar = new File(properties['spigotJarPath'])
                                if (! spigotJar.exists()) {
                                    println "spigot jar NOT FOUND at:'" + spigotJar.getPath() + "'"
                                    println "Proceeding to generate it with spigot BuildTools..."
                                    buildToolsCmd.execute(sysenv, cwd ).waitForProcessOutput(System.out, System.err)
                                } else {
                                    println "No need to build spigot.jar, it already exists in maven local repository at: " + spigotJar.getPath()
                                }
                                println '-------------------------------------------------------------------------------------'
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
